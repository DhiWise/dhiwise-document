"use strict";(self.webpackChunkdhiwise_document=self.webpackChunkdhiwise_document||[]).push([[3613],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=o,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||a;return n?i.createElement(g,r(r({ref:t},d),{},{components:n})):i.createElement(g,r({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68367:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(87462),o=(n(67294),n(3905));const a={sidebar_position:6},r="Change View Components",l={unversionedId:"Designguidelines/component-specific-guidelines/change-view-components",id:"Designguidelines/component-specific-guidelines/change-view-components",title:"Change View Components",description:"DhiWise auto-identifies all your screen view components and generates a complete code for the same. Generally, it auto-detects the components, but sometimes due to design changes, it may not able to identify them.",source:"@site/docs/Designguidelines/component-specific-guidelines/change-view-components.md",sourceDirName:"Designguidelines/component-specific-guidelines",slug:"/Designguidelines/component-specific-guidelines/change-view-components",permalink:"/docs/Designguidelines/component-specific-guidelines/change-view-components",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"Designguidelines",previous:{title:"Overlay Controls",permalink:"/docs/Designguidelines/component-specific-guidelines/overlay-controls"},next:{title:"Quality guidelines",permalink:"/docs/Designguidelines/quality-guidelines/"}},s={},c=[{value:"AutoCompleteTextfield",id:"autocompletetextfield",level:2},{value:"Calendar",id:"calendar",level:2},{value:"Fragment",id:"fragment",level:2},{value:"GoogleMap",id:"googlemap",level:2},{value:"WebView",id:"webview",level:2}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"change-view-components"},"Change View Components"),(0,o.kt)("p",null,"DhiWise auto-identifies all your screen view components and generates a complete code for the same. Generally, it auto-detects the components, but sometimes due to design changes, it may not able to identify them. "),(0,o.kt)("p",null,"To get the missing component identified, you can ",(0,o.kt)("strong",{parentName:"p"},"change the view")," of the misidentified component to the correct one in DhiWise."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To get identify your components directly from ",(0,o.kt)("strong",{parentName:"p"},"Figma"),", you can also refer below;"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Refer to the ",(0,o.kt)("a",{href:"/docs/Designguidelines/intro"},"design guidelines")," or ",(0,o.kt)("a",{href:"/docs/Designguidelines/component-specific-guidelines/"},"component-specific guidelines")," which should be followed while screen designing in Figma. ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{href:"/docs/Designguidelines/tagging-components-in-figma"},"Tag a specific component")," in Figma and get it auto-identified in DhiWise."))),(0,o.kt)("p",null,"Components like ",(0,o.kt)("strong",{parentName:"p"},"Calendar"),",",(0,o.kt)("strong",{parentName:"p"},"Map")," and other complex components cannot be identified easily, so DhiWise offers functionality to change the view of that component and get your design identified easily. Below are such supported views:"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To know more about how to change the view of a component:\nFor Flutter ",(0,o.kt)("a",{href:"/docs/flutter/change-widget"},"learn here"),", and for React ",(0,o.kt)("a",{href:"/docs/react/change-view"},"learn here"),".")),(0,o.kt)("h2",{id:"autocompletetextfield"},"AutoCompleteTextfield"),(0,o.kt)("p",null,"AutoCompleteTextfield are similar to ",(0,o.kt)("a",{href:"/docs/Designguidelines/component-specific-guidelines/input-controls#textfield"},"TextField"),", just they have additional functionality of auto-fill. "),(0,o.kt)("p",null,"In auto-identification, AutoCompleteTextfield will be identified as TextField, but to make it work like AutoCompleteTextfield you would have to change the view and make the TextField as AutoCompleteTextfield."),(0,o.kt)("p",null,"  ",(0,o.kt)("img",{alt:"Example banner",src:n(67723).Z,width:"1916",height:"704"})),(0,o.kt)("h2",{id:"calendar"},"Calendar"),(0,o.kt)("p",null,"A calendar is a complex component, which cannot be identified easily, so to identify the calendar simply change its view to Calendar."),(0,o.kt)("p",null,"  ",(0,o.kt)("img",{alt:"Example banner",src:n(11713).Z,width:"1916",height:"704"})),(0,o.kt)("h2",{id:"fragment"},"Fragment"),(0,o.kt)("p",null,"A Fragment might be used to present a sliding drawer, tabbed content, or as a page in a ",(0,o.kt)("strong",{parentName:"p"},"Pager"),", or it might simply represent a normal screen. To get a component identified as Fragment, change its view to Fragment."),(0,o.kt)("p",null,"Hello world;"),(0,o.kt)("h2",{id:"googlemap"},"GoogleMap"),(0,o.kt)("p",null,"GoogleMap is not identified in DhiWise auto-identification, so to identify it in design, change the view of it to GoogleMap."),(0,o.kt)("p",null,"  ",(0,o.kt)("img",{alt:"Example banner",src:n(74508).Z,width:"1916",height:"704"})),(0,o.kt)("h2",{id:"webview"},"WebView"),(0,o.kt)("p",null,"WebView is not identified in auto-identification, so to get it identified you would have to change the view to WebView."),(0,o.kt)("p",null,"  ",(0,o.kt)("img",{alt:"Example banner",src:n(33613).Z,width:"1916",height:"704"})))}p.isMDXComponent=!0},67723:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/AutoCompleteTextField-d443aec989056eb757619371d48a8801.png"},11713:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Calender-345f40876be3e1a7f8535af4f17dcacd.png"},74508:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Map-712d5c02f3a0529e02b38244221391ed.png"},33613:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Webview-b47316143d391b2e61d6da67443bf091.png"}}]);