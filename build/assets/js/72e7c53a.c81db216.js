"use strict";(self.webpackChunkdhiwise_document=self.webpackChunkdhiwise_document||[]).push([[1175],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=c(t),u=o,f=g["".concat(l,".").concat(u)]||g[u]||d[u]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},79882:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>g});var r=t(87462),o=(t(67294),t(3905)),a=t(68758),i=t(73373),s=t(83191);const l={sidebar_position:5},c="API Integration",p={unversionedId:"android/api-integration",id:"android/api-integration",title:"API Integration",description:"",source:"@site/docs/android/api-integration.md",sourceDirName:"android",slug:"/android/api-integration",permalink:"/docs/android/api-integration",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"android",previous:{title:"Navigation",permalink:"/docs/android/navigation"},next:{title:"Integrate Firebase Social Auth",permalink:"/docs/android/integrate-firebase-social-auth"}},d={},g=[{value:"<strong>Step 1:</strong>",id:"step-1",level:4},{value:"<strong>Step 2:</strong>",id:"step-2",level:4},{value:"<strong>Step 3:</strong>",id:"step-3",level:4},{value:"Generated code snippet",id:"generated-code-snippet",level:4}],u={toc:g};function f(e){let{components:n,...l}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"api-integration"},"API Integration"),(0,o.kt)("p",null,"Integrate API in any component or screen by selecting API from create action or onCreate. However, the APIs are required for the API integration to work, which can be uploaded or added manually."),(0,o.kt)("h4",{id:"step-1"},(0,o.kt)("strong",{parentName:"h4"},"Step 1:")),(0,o.kt)("p",null,"Search the API you want to access. Then select the required ",(0,o.kt)("strong",{parentName:"p"},"header"),", ",(0,o.kt)("strong",{parentName:"p"},"parameter"),", and ",(0,o.kt)("strong",{parentName:"p"},"body"),". "),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"In Body, select the view from which you want to assign data to an API request. You will get the code with API request variables assigned to this view's value.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example banner",src:t(78552).Z,width:"1932",height:"1250"})),(0,o.kt)("h4",{id:"step-2"},(0,o.kt)("strong",{parentName:"h4"},"Step 2:")),(0,o.kt)("p",null,"Manage response data and bind it to the respective view. Select the required ",(0,o.kt)("strong",{parentName:"p"},"key")," and ",(0,o.kt)("strong",{parentName:"p"},"view"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Save the data to preference to showcase it at other places in your application with the lifecycle feature in screens for Android and Flutter app builders.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example banner",src:t(73073).Z,width:"1932",height:"1252"})),(0,o.kt)("h4",{id:"step-3"},(0,o.kt)("strong",{parentName:"h4"},"Step 3:")),(0,o.kt)("p",null,"Manage the action you want to perform on the success or error of your API call. In dropbox, it will show you the options which we have already covered like ",(0,o.kt)("a",{href:"docs/android/navigation"},"Navigation"),", ",(0,o.kt)("a",{href:"/docs/android/show-alert"},"Show Alert"),", ",(0,o.kt)("a",{href:"/docs/android/add-permissions"},"Permissions"),", and such."),(0,o.kt)("div",{className:"grid grid-cols-3 gap-20"},(0,o.kt)("a",{className:"Card",href:"docs/android/navigation"},(0,o.kt)("img",{src:a.Z,alt:""}),(0,o.kt)("h4",null,"Navigation")),(0,o.kt)("a",{className:"Card",href:"/docs/android/show-alert"},(0,o.kt)("img",{src:s.Z,alt:""}),(0,o.kt)("h4",null,"Show Alert")),(0,o.kt)("a",{className:"Card",href:"/docs/android/add-permissions"},(0,o.kt)("img",{src:i.Z,alt:""}),(0,o.kt)("h4",null,"Permissions"))),(0,o.kt)("br",null),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Example banner",src:t(85097).Z,width:"1932",height:"1252"})),(0,o.kt)("h4",{id:"generated-code-snippet"},"Generated code snippet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="apiIntegration.kt"',title:'"apiIntegration.kt"'},'//service class\n  @POST("/device/auth/login")\n  public suspend fun createLogin(@Header("Content-Type") contentType: String?, @Body\n      createLoginRequest: CreateLoginRequest?): CreateLoginResponse\n\n//Repository class\n public suspend fun createLogin(contentType: String?, createLoginRequest: CreateLoginRequest?):\n      Response<CreateLoginResponse> = try {\n    val isOnline = MyApp.getInstance().isOnline()\n    if(isOnline) {\n      SuccessResponse(retrofitServices.createLogin(contentType, createLoginRequest))\n    } else {\n      val internetException =\n          NoInternetConnection(MyApp.getInstance().getString(R.string.no_internet_connection))\n      ErrorResponse(internetException.message ?:errorMessage, internetException)\n    }\n  } catch(e:Exception) {\n    e.printStackTrace()\n    ErrorResponse(e.message ?:errorMessage, e)\n  }\n\n  //ViewModel class\n   public val createLoginLiveData: MutableLiveData<Response<CreateLoginResponse>> =\n      MutableLiveData<Response<CreateLoginResponse>>()\n\n  public fun onClickBtnSignIn(): Unit {\n    viewModelScope.launch {\n      progressLiveData.postValue(true)\n      createLoginLiveData.postValue(\n      networkRepository.createLogin(\n      contentType = """application/json""",\n          createLoginRequest = CreateLoginRequest(\n          password = loginModel.value?.etPasswordValue,\n          username = loginModel.value?.etYourEmailValue)\n      )\n      )\n      progressLiveData.postValue(false)\n    }\n  }\n\n  public fun bindCreateLoginResponse(response: CreateLoginResponse): Unit {\n    val loginModelValue = loginModel.value ?:LoginModel()\n    loginModel.value = loginModelValue\n  }\n\n  //Api call on Button click from controller class\n  this@LoginActivity.hideKeyboard()\n  viewModel.onClickBtnSignIn()\n\n  //observer in controller class\n  viewModel.createLoginLiveData.observe(this@LoginActivity) {\n    if(it is SuccessResponse) {\n    val response = it.getContentIfNotHandled()\n    onSuccessCreateLogin(it)\n    } else if(it is ErrorResponse)  {\n    onErrorCreateLogin(it.data ?:Exception())\n    }\n  }\n\n  //Success Response in controller class\n  private fun onSuccessCreateLogin(response: SuccessResponse<CreateLoginResponse>): Unit {\n    viewModel.bindCreateLoginResponse(response.data)\n  } \n\n //Error Response in controller class\n  private fun onErrorCreateLogin(exception: Exception): Unit {\n    when(exception) {\n      is NoInternetConnection -> {\n        Snackbar.make(binding.root, exception.message?:"", Snackbar.LENGTH_LONG).show()\n      }\n      is HttpException -> {\n        val errorBody = exception.response()?.errorBody()?.string()\n        val errorObject = if (errorBody != null  && errorBody.isJSONObject()) JSONObject(errorBody)\n            else JSONObject()\n        val errMessage = MyApp.getInstance().getString(R.string.lbl_error)\n        this.alert(MyApp.getInstance().getString(R.string.lbl_alert),errMessage) {\n          neutralButton {\n          }\n        }\n      }\n    }\n  }\n')),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("p",null,"Got a question?\xa0",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/invite/rFMnCG5MZ7"},(0,o.kt)("strong",{parentName:"a"},"Ask here")),"."))}f.isMDXComponent=!0},83191:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/Alert-33dbd9e63060b28aba2b00350a4ac96a.png"},73373:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/Permission-47f8273a1f51a4232ef499fb144cd881.png"},68758:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/navigation-6a97d278c254e60e4848eaef23eb9be7.png"},78552:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/API1-2fe58af476bec8a74d7ef8c8f9573620.gif"},73073:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/API2-ba0473ed67baa9d2fdcfb0d5b78057d6.gif"},85097:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/API3-72ef76b9d4c759f9bb053b446d004f83.gif"}}]);