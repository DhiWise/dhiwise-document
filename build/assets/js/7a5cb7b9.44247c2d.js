"use strict";(self.webpackChunkdhiwise_document=self.webpackChunkdhiwise_document||[]).push([[5665],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},18023:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),i=n(87471),o=n(71858),s=n(88038);const l={sidebar_position:5},c="API Integration",p={unversionedId:"ios/api-integration",id:"ios/api-integration",title:"API Integration",description:"",source:"@site/docs/ios/api-integration.md",sourceDirName:"ios",slug:"/ios/api-integration",permalink:"/docs/ios/api-integration",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"ios",previous:{title:"Navigation",permalink:"/docs/ios/navigation"},next:{title:"Add Permissons",permalink:"/docs/ios/add-permissions"}},d={},u=[{value:"Step 1",id:"step-1",level:4},{value:"Step 2",id:"step-2",level:4},{value:"Step 3",id:"step-3",level:4},{value:"Generated code snippet",id:"generated-code-snippet",level:4}],m={toc:u};function f(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-integration"},"API Integration"),(0,r.kt)("p",null,"Integrate APIs into apps UI components or screens via ",(0,r.kt)("a",{href:"/docs/ios/create-actions"},"Create Actions"),"  or ",(0,r.kt)("a",{href:"/docs/ios/manage-app-lifecycle"},"Manage Controller Lifecycle")," . However, first, you need to either upload your API postman file or manually add APIs from ",(0,r.kt)("a",{href:"/docs/ios/add-apis-and-enviroment-variables"},"Add APIs and Enviroment variables"),"."),(0,r.kt)("iframe",{width:"100%",height:"500",src:"https://www.youtube.com/embed/BPGID6rAeKs",title:"Integrate APIs on DhiWise mobile app builders",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,r.kt)("h4",{id:"step-1"},"Step 1"),(0,r.kt)("p",null,"Search the API you want to access. Then select the required header, parameter, and body. "),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In Body, select the view from which you want to assign input data to the API request. You will get the code with API request variables assigned to this view's value.\nFor example, in the below gif we selected the username and the password text fields. ")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example banner",src:n(15988).Z,width:"1928",height:"1240"})),(0,r.kt)("h4",{id:"step-2"},"Step 2"),(0,r.kt)("p",null,"Manage response data and bind it to the respective view. Select the required key and view."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Save the data to preference to showcase it at other places in your application with the lifecycle feature in screens for Android and Flutter app builders.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example banner",src:n(42473).Z,width:"1928",height:"1240"})),(0,r.kt)("h4",{id:"step-3"},"Step 3"),(0,r.kt)("p",null,"Manage the action you want to perform on the success or error of your API call. In dropbox, it will show you the options which we have already covered like ",(0,r.kt)("a",{href:"/docs/ios/navigation"},"Navigation"),", ",(0,r.kt)("a",{href:"/docs/ios/show-alert"},"Alert Box"),", ",(0,r.kt)("a",{href:"/docs/ios/api-integration"},"API integration"),", and such."),(0,r.kt)("div",{className:"grid grid-cols-3 gap-20"},(0,r.kt)("a",{className:"Card",href:"/docs/ios/navigation"},(0,r.kt)("img",{src:i.Z,alt:""}),(0,r.kt)("h4",null,"Navigation")),(0,r.kt)("a",{className:"Card",href:"/docs/ios/show-alert"},(0,r.kt)("img",{src:o.Z,alt:""}),(0,r.kt)("h4",null,"Show Alert")),(0,r.kt)("a",{className:"Card",href:"/docs/ios/api-integration"},(0,r.kt)("img",{src:s.Z,alt:""}),(0,r.kt)("h4",null,"API integration"))),(0,r.kt)("br",null),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Example banner",src:n(58618).Z,width:"1928",height:"1240"})),(0,r.kt)("h4",{id:"generated-code-snippet"},"Generated code snippet"),(0,r.kt)("p",null,"In API Integration, the dependent ",(0,r.kt)("inlineCode",{parentName:"p"},"Alamofire")," class will be added under Services > ",(0,r.kt)("inlineCode",{parentName:"p"},"APIManager.swift")," and the common functions related to it are under Services > ",(0,r.kt)("inlineCode",{parentName:"p"},"APIServices.swift")," in the project."),(0,r.kt)("p",null,"ExampleViewModel: The API call method will be generated in the Model class, with onSuccess and onError methods, with related variables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="ExampleView.swift"',title:'"ExampleView.swift"'},"@StateObject var exampleViewModel = ExampleViewModel()\n\nButton(\n  action: {\n    exampleViewModel.createLogin()\n  },\n  label: {\n    Text(StringConstants.kLblCallAPI)\n  }\n)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="ExmapleViewModelSwift.swift"',title:'"ExmapleViewModelSwift.swift"'},'class ExampleViewModel: ObservableObject {\n  @Published var passwordText: String = ""\n  @Published var emailText: String = ""\n  @Published var isLoaderShow: Bool = false\n  @Published var createLoginResponse: CreateLoginResponse?\n\n  func createLogin() {\n    isLoaderShow = true\n\n    let createLoginRequest = CreateLoginRequest(password: passwordText, username: emailText)\n    APIServices.shared.callCreateLogin(parameters: createLoginRequest.dictionary ?? [:]) {\n      response in\n      self.isLoaderShow = false\n      if let response = response {\n        self.onSuccessCreateLogin(response: response)\n      }\n    } failure: { error in\n      self.isLoaderShow = false\n      self.onErrorCreateLogin(error: error)\n    }\n  }\n\n  func onSuccessCreateLogin(response: CreateLoginResponse) {\n    //create action code - navigation, api call, alert\n  }\n\n  func onErrorCreateLogin(error: String) {\n    //create action code - navigation, api call, alert\n  }\n}\n')),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("p",null,"Got a question?\xa0",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/invite/rFMnCG5MZ7"},(0,r.kt)("strong",{parentName:"a"},"Ask here")),"."))}f.isMDXComponent=!0},88038:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/APIIntegration-c2faee8f031f4f12e8f9610537700018.png"},71858:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Alert-33dbd9e63060b28aba2b00350a4ac96a.png"},87471:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/navigation-6a97d278c254e60e4848eaef23eb9be7.png"},42473:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/API-step-2-9fb8a757a8751a86294613283d087416.gif"},58618:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/API-step-3-c83dab2e229c63805e6a26cfb8431c11.gif"},15988:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/APi-step-1-fc0b22afd185b16fbf2540255a055523.gif"}}]);